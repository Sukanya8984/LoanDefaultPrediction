# -*- coding: utf-8 -*-
"""Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fAeRwuZ2dXlQ1CXCxatbWh9tVX-1yxla

# **Preprocessing**
"""

import pandas as pd
df=pd.read_csv("/content/Original_data.csv")
print(df.head())

df.EmploymentType.unique()

df.shape

df.columns

"""# Imbalanced Data"""

df['Default'].value_counts(normalize=True)

!python --version

!pip install imbalanced-learn

#df.drop(columns =['LoanID'],axis=1,inplace=True)
import random
random.seed(42)
df['LoanID']=random.sample(range(0, 255347),(len(df)))
df.head()

df.Education.unique()

df_ohe = pd.get_dummies(df)

df_ohe.head()

df.head()

X= df_ohe.drop(columns=['Default'])
Y= df_ohe['Default']

"""# **Balancing Data**"""

# Step 2: Apply SMOTE to balance the classes
from imblearn.over_sampling import SMOTE
smote = SMOTE(sampling_strategy='auto', random_state=42)
X_resampled, y_resampled = smote.fit_resample(X, Y)

# Step 3: Combine resampled features and target variable into a new DataFrame
resampled_df = pd.DataFrame(X_resampled, columns=X.columns)
resampled_df["Default"] = y_resampled

resampled_df.to_csv('Processed_data.csv', index=False)

resampled_df.head()

resampled_df['Default'].value_counts(normalize=True)

"""# **Feature Reduction**"""

X = resampled_df[['Age', 'Income', 'LoanAmount', 'CreditScore','MonthsEmployed','InterestRate','DTIRatio','LoanTerm']]
Y= resampled_df['Default']

X.shape,Y.shape

# Step 3: Combine resampled features and target variable into a new DataFrame
final_df = pd.DataFrame(X, columns=X.columns)
final_df["Default"] = Y

final_df.head()

final_df.shape

final_df.to_csv('Selected_features.csv', index=False)



